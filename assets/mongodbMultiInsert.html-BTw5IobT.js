import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as c,c as l,a as n,d as a,e as t,b as p}from"./app-DI4bkZkG.js";const u={},i=p(`<h1 id="mongodb优化大量插入" tabindex="-1"><a class="header-anchor" href="#mongodb优化大量插入"><span>MongoDB优化大量插入</span></a></h1><h2 id="mongodb-的插入操作有哪些" tabindex="-1"><a class="header-anchor" href="#mongodb-的插入操作有哪些"><span>MongoDB 的插入操作有哪些？</span></a></h2><p>在预测预警模块中的滚动计算中，每次计算需要插入约 33w 行数据到 MongoDB 的 6 张表中，而我们使用的正是 MongoTemplate 提供的接口。但问题是 MongoTemplate 提供了 2 个接口进行大量写入，用哪个性能更好呢？</p><h3 id="mongotemplate-insert" tabindex="-1"><a class="header-anchor" href="#mongotemplate-insert"><span>mongoTemplate.insert()</span></a></h3><p>mongoTemplate.insert(Collection &lt;? extends T&gt; batchToSave, String collectionName)</p><p>一个看上去平平无奇的接口，可以将集合中的元素全部插入，那么它底层是如何实现的呢？</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">insertDocumentList</span><span class="token punctuation">(</span><span class="token class-name">String</span> collectionName<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documents<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>documents<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Inserting list of Documents containing {} items&quot;</span><span class="token punctuation">,</span> documents<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">execute</span><span class="token punctuation">(</span>collectionName<span class="token punctuation">,</span> collection <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>

       <span class="token class-name">MongoAction</span> mongoAction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoAction</span><span class="token punctuation">(</span>writeConcern<span class="token punctuation">,</span> <span class="token class-name">MongoActionOperation</span><span class="token punctuation">.</span><span class="token constant">INSERT_LIST</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
             <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">WriteConcern</span> writeConcernToUse <span class="token operator">=</span> <span class="token function">prepareWriteConcern</span><span class="token punctuation">(</span>mongoAction<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">if</span> <span class="token punctuation">(</span>writeConcernToUse <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          collection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>documents<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          collection<span class="token punctuation">.</span><span class="token function">withWriteConcern</span><span class="token punctuation">(</span>writeConcernToUse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>documents<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token class-name">MappedDocument</span><span class="token punctuation">.</span><span class="token function">toIds</span><span class="token punctuation">(</span>documents<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到它调用了 collection.insertMany()方法，这正是 mongosh 命令行中的方法 insertMany()，默认情况下，按顺序插入文档。如果 <code>ordered</code> 设置为 false，则文档将以无序格式插入，并且可以通过重新排序来提高性能。</p><h3 id="mongotemplate-bulkops" tabindex="-1"><a class="header-anchor" href="#mongotemplate-bulkops"><span>mongoTemplate.bulkOps()</span></a></h3><p>mongoTemplate.bulkOps(BulkMode mode, @Nullable Class&lt;?&gt; entityType, String collectionName).insert(<em>List</em>&lt;? _extends _Object&gt; documents).execute()</p><p>一个看起来很厉害的接口，可以设置有序插入或者无序插入。当使用 ordered 的时候如果前一条操作命令失败则终止，如果使用 unordered 模式，执行失败的语句会跳过，直至全部语句执行完毕。理论上来说 unordered 语句效率高于 ordered 语句。<strong>但实测后差距不明显。</strong></p><p>bulkOps()底层使用 db.collection.bulkWrite()，但是 mongodb.collection.bulkWrite()不支持 insertMany，这个接口是如何实现大量插入的呢？</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">BulkOperations</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> documents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>documents<span class="token punctuation">,</span> <span class="token string">&quot;Documents must not be null!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    documents<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">insert</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用了循环，调用自身的 insert()方法。</p><p>至此，我们应该能从理论上分析出，mongoTemplate.insert()方法的性能<strong>理论上</strong>优于 mongoTemplate.bulkOps().insert().execute()，<strong>另外</strong>，bulkOps()方法可以设置有序或者无序，而 insert()方法默认有序且只能有序。</p><h2 id="mongodb-的插入性能测试" tabindex="-1"><a class="header-anchor" href="#mongodb-的插入性能测试"><span>MongoDB 的插入性能测试</span></a></h2><p>测试数据：30w 行</p><p>测试数据库：150 MongoDB</p><p>测试数据表：swmm_test1, swmm_test2, swmm_test3, swmm_test4</p><h3 id="单线程-mongotemplate-insert" tabindex="-1"><a class="header-anchor" href="#单线程-mongotemplate-insert"><span>单线程 mongoTemplate.insert()</span></a></h3><p>单线程顺序分别插入 4 张表，测试代码将在最后展示。</p><p>耗时：24698，22438，29554，23347，30795</p><p><strong>平均耗时：26166.4ms</strong></p><h3 id="单线程-mongotemplate-bulkops" tabindex="-1"><a class="header-anchor" href="#单线程-mongotemplate-bulkops"><span>单线程 mongoTemplate.bulkOps()</span></a></h3><p>单线程顺序分别插入 4 张表，测试代码将在最后展示。</p><p>耗时：27221，22923，25696，23181，24925</p><p><strong>平均耗时：24789.2ms</strong></p><h3 id="单线程总结" tabindex="-1"><a class="header-anchor" href="#单线程总结"><span>单线程总结</span></a></h3><p>可以得出，在单线程下，两个接口的<strong>性能差距在 5% <strong>以内，可以说</strong>性能几乎一致</strong>。虽然与理论分析不相符，但考虑到 150 服务器的<strong>单核性能</strong>，以及 MongoTemplate 对 bulkOps()方法的优化，这是有可能的。</p><p>因此，后续的测试都使用 <strong>bulkOps()<strong>方法并设置为</strong>无序</strong>插入。</p><h3 id="线程池参数的设置" tabindex="-1"><a class="header-anchor" href="#线程池参数的设置"><span>线程池参数的设置</span></a></h3><p>线程池的参数共有 7 个，而每一个都很重要，每一个参数都可以写一篇文章。</p><p>这里我们自己创建线程池，<strong>而不是</strong>使用 Executers 里的线程池，因为 <strong>Alibaba 编程规范</strong>中提到过：【强制】线程池<strong>不允许</strong>使用 Executors 去创建，而是通过 <strong>ThreadPoolExecutor</strong> 的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。</p><p><strong>再强调一遍，使用 Executors 创建的线程池无一例外都使用了无界队列 new LinkedBlockingQueue()，其默认大小为 Integer.MAX_VALUE，会导致队列堆积大量任务，最终 OOM。</strong></p><p><strong>再强调一遍，使用 Executors 创建的线程池无一例外都使用了无界队列 new LinkedBlockingQueue()，其默认大小为 Integer.MAX_VALUE，会导致队列堆积大量任务，最终 OOM。</strong></p><p><strong>再强调一遍，使用 Executors 创建的线程池无一例外都使用了无界队列 new LinkedBlockingQueue()，其默认大小为 Integer.MAX_VALUE，会导致队列堆积大量任务，最终 OOM。</strong></p><p>手动创建线程池（单例模式下）（如果非单例模式，需要写入 @Configuration）：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadPoolExecutor</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">NamedThreadFactory</span><span class="token punctuation">(</span><span class="token string">&quot;writer pool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的参数仅仅作为参考。</p><p>关于<strong>核心线程数</strong>以及<strong>最大线程数</strong>：</p><p>从经验来说，IO 密集型的任务应该将线程数设置为 2*CPU 核心数，考虑到我们的生产环境是四核 CPU，那么将线程数设置为 <strong>8</strong> 是最合理的。这里我们测试了不同的线程数，期望找出最合适的线程数大小。</p><p>BTW，所谓的经验值怎么来的？</p><p><strong>计算密集型应用</strong> 以第一种计算方式来看，对于计算密集型应用，假定等待时间趋近于 0，是的 CPU 利用率达到 100%，那么线程数就是 CPU 核心数，那这个 +1 意义何在呢？ 《Java 并发编程实践》这么说：</p><blockquote><p>计算密集型的线程恰好在某时因为发生一个页错误或者因其他原因而暂停，刚好有一个“额外”的线程，可以确保在这种情况下 CPU 周期不会中断工作。</p></blockquote><p>所以 N+1 确实是一个经验值。</p><p><strong>IO 密集型应用</strong> 同样以第一种方式来看，对于 IO 密集型应用，假定所有的操作时间几乎都是 IO 操作耗时，那么 W/C 的值就为 1，那么对应的线程数确实为 2N。</p><p>从实际来看，我们应该从服务器上的 <strong>MongoDB 负载情况</strong>算出其 <strong>QPS</strong>，再用 <strong>QPS</strong> 逆推出合适的线程数量，很可惜，目前无从得知 <strong>QPS</strong>。</p><h3 id="_2-线程分表插入" tabindex="-1"><a class="header-anchor" href="#_2-线程分表插入"><span>2 线程分表插入</span></a></h3><p>2 个线程异步插入 4 张表，测试代码将在最后展示。</p><p>耗时（人工计时）：25000，25000，25000, 25000, 24000</p><p><strong>平均耗时：24800ms</strong></p><h3 id="_4-线程分表插入" tabindex="-1"><a class="header-anchor" href="#_4-线程分表插入"><span>4 线程分表插入</span></a></h3><p>4 个线程异步插入 4 张表，测试代码将在最后展示。</p><p>耗时（人工计时）：19000，26000，17000, 26000, 23000</p><p><strong>平均耗时：22200ms</strong></p><h3 id="_4-线程分片插入" tabindex="-1"><a class="header-anchor" href="#_4-线程分片插入"><span>4 线程分片插入</span></a></h3><p>4 个线程异步分片插入 4 张表，<strong>每个分片的大小为 5000</strong>，测试代码将在最后展示。</p><p>值得一提的是，因为线程池的阻塞队列大小为 10，而分片数量(60*4)很显然超过了 10+4，因此线程池会执行<strong>拒绝策略</strong>（CallerRunsPolicy），主线程也会执行插入数据库任务，<strong>此时的线程数量达到了 5 个</strong>。日志将在最后展示。</p><p>耗时（人工计时）：19000，18000，17000, 20000, 19000</p><p><strong>平均耗时：18600ms</strong></p><h3 id="_8-线程分片插入" tabindex="-1"><a class="header-anchor" href="#_8-线程分片插入"><span>8 线程分片插入</span></a></h3><p>8 个线程异步分片插入 4 张表，<strong>每个分片的大小为 5000</strong>，测试代码将在最后展示。</p><p>值得一提的是，因为线程池的阻塞队列大小为 10，而分片数量(60*4)很显然超过了 10+8，因此线程池会执行<strong>拒绝策略</strong>（CallerRunsPolicy），主线程也会执行插入数据库任务，<strong>此时的线程数量达到了 9 个</strong>。日志将在最后展示。</p><p>耗时（人工计时）：18000，19000，15000, 15000, 19000</p><p><strong>平均耗时：17200ms</strong></p><h3 id="_16-线程分片插入" tabindex="-1"><a class="header-anchor" href="#_16-线程分片插入"><span>16 线程分片插入</span></a></h3><p>16 个线程异步分片插入 4 张表，<strong>每个分片的大小为 5000</strong>，测试代码将在最后展示。</p><p>值得一提的是，因为线程池的阻塞队列大小为 10，而分片数量(60*4)很显然超过了 10+16，因此线程池会执行<strong>拒绝策略</strong>（CallerRunsPolicy），主线程也会执行插入数据库任务，<strong>此时的线程数量达到了 17 个</strong>。日志将在最后展示。</p><p>耗时（人工计时）：17000，16000，15000, 15000, 18000</p><p><strong>平均耗时：16200ms</strong></p><h3 id="_32-线程分片插入" tabindex="-1"><a class="header-anchor" href="#_32-线程分片插入"><span>32 线程分片插入</span></a></h3><p>32 个线程异步分片插入 4 张表，<strong>每个分片的大小为 5000</strong>，测试代码将在最后展示。</p><p>值得一提的是，因为线程池的阻塞队列大小为 10，而分片数量(60*4)很显然超过了 10+32，因此线程池会执行<strong>拒绝策略</strong>（CallerRunsPolicy），主线程也会执行插入数据库任务，<strong>此时的线程数量达到了 33 个</strong>。日志将在最后展示。</p><p>耗时（人工计时）：16000，15000，13000, 14000, 15000</p><p><strong>平均耗时：14600ms</strong></p><h3 id="_64-线程分片插入" tabindex="-1"><a class="header-anchor" href="#_64-线程分片插入"><span>64 线程分片插入</span></a></h3><p>64 个线程异步分片插入 4 张表，<strong>每个分片的大小为 5000</strong>，测试代码将在最后展示。</p><p>值得一提的是，因为线程池的阻塞队列大小为 10，而分片数量(60*4)很显然超过了 10+64，因此线程池会执行<strong>拒绝策略</strong>（CallerRunsPolicy），主线程也会执行插入数据库任务，<strong>此时的线程数量达到了 65 个</strong>。日志将在最后展示。</p><p>耗时（人工计时）：15000，15000，19000, 19000, 16000</p><p><strong>平均耗时：16800ms</strong></p><h3 id="为什么没有-128-线程插入测试" tabindex="-1"><a class="header-anchor" href="#为什么没有-128-线程插入测试"><span>为什么没有 128 线程插入测试？</span></a></h3><p>MongoDB 使用的存储引擎 WiredTiger 的默认同时写入请求为 128，超过 128 之外的写入请求将被<strong>阻塞</strong>。这个设置可以更改。</p><p>其次，考虑到 150 服务器的性能，128 个线程同时请求写入将极大地提升 MongoDB 的负载，可能导致崩溃。</p><p>另外，为什么没有考虑其他服务器如 53、54 呢？因为使用 VPN 连接的 MongoDB 在大量写入时可能会被 VPN 拦截请求，导致 MongoConnection 断开报错。</p><h3 id="多线程总结" tabindex="-1"><a class="header-anchor" href="#多线程总结"><span>多线程总结</span></a></h3><ul><li>在 2 线程分表插入测试中，相比单线程响应时间缩短约 0%，可以忽略不计</li><li>在 4 线程分表插入测试中，相比单线程响应时间缩短约 <strong>10.44%</strong></li><li>在 4 线程分片插入测试中，相比单线程响应时间缩短约 <strong>24.97%</strong></li><li>在 8 线程分片插入测试中，相比单线程响应时间缩短约 <strong>30.61%</strong></li><li>在 16 线程分片插入测试中，相比单线程响应时间缩短约 <strong>34.65%</strong></li><li>在 32 线程分片插入测试中，相比单线程响应时间缩短约 <strong>41.10%</strong></li><li>在 64 线程分片插入测试中，相比单线程响应时间缩短约 <strong>32.23%</strong></li></ul><p>可以得出以下结论：</p><ul><li>多线程插入的性能要比单线程更好</li><li>分片插入要比分表插入<strong>性能更好</strong>，利用线程池的<strong>效率更高</strong></li><li>随着线程池线程数量的提升，整体插入<strong>性能提升</strong>，<strong>响应时间缩短</strong></li><li>随着线程池线程数量的提升，整体插入性能的提升有<strong>极限</strong>，这个极限取决于部署 MongoDB 的<strong>服务器性能</strong>、MongoDB 的<strong>部署方式</strong>（单机，复制集，分片集群）以及 MongoDB 的<strong>配置</strong>（同时写入请求数）</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>`,89),k={href:"https://www.jianshu.com/p/f6024f806534",target:"_blank",rel:"noopener noreferrer"},r={href:"https://zhuanlan.zhihu.com/p/116426107",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.jianshu.com/p/04fb85fe8ba4",target:"_blank",rel:"noopener noreferrer"},m=p(`<h2 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码"><span>测试代码</span></a></h2><h3 id="单线程-mongotemplate-insert-1" tabindex="-1"><a class="header-anchor" href="#单线程-mongotemplate-insert-1"><span>单线程 mongoTemplate.insert()</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertSingleThreadTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> collectionList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;swmm_test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TSPairObject</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Date</span> time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getExactlyDate</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">300000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getDateHowManyMinutesAgo</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TSPairObject</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documentList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TSPairObject</span> ts <span class="token operator">:</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;feature_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;TT&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getDt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;stepvalue&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            documentList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> collectionName <span class="token operator">:</span> collectionList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mongoTemplate<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>documentList<span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;BulkInsert into {}, taking {}ms, size = {}&quot;</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">,</span> end <span class="token operator">-</span> start<span class="token punctuation">,</span> documentList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="单线程-mongotemplate-bulkops-1" tabindex="-1"><a class="header-anchor" href="#单线程-mongotemplate-bulkops-1"><span>单线程 mongoTemplate.bulkOps()</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertSingleThreadTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> collectionList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;swmm_test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TSPairObject</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Date</span> time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getExactlyDate</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">300000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getDateHowManyMinutesAgo</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TSPairObject</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documentList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TSPairObject</span> ts <span class="token operator">:</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;feature_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;TT&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getDt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;stepvalue&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            documentList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> collectionName <span class="token operator">:</span> collectionList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mongoTemplate<span class="token punctuation">.</span><span class="token function">bulkOps</span><span class="token punctuation">(</span><span class="token class-name">BulkOperations<span class="token punctuation">.</span>BulkMode</span><span class="token punctuation">.</span><span class="token constant">UNORDERED</span><span class="token punctuation">,</span> <span class="token class-name">FileEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>documentList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;BulkInsert into {}, taking {}ms, size = {}&quot;</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">,</span> end <span class="token operator">-</span> start<span class="token punctuation">,</span> documentList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多线程分表插入" tabindex="-1"><a class="header-anchor" href="#多线程分表插入"><span>多线程分表插入</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadPoolExecutor</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">NamedThreadFactory</span><span class="token punctuation">(</span><span class="token string">&quot;writer pool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> collectionList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;swmm_test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TSPairObject</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Date</span> time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getExactlyDate</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">300000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getDateHowManyMinutesAgo</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TSPairObject</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documentList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TSPairObject</span> ts <span class="token operator">:</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;feature_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;TT&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getDt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;stepvalue&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            documentList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> collectionName <span class="token operator">:</span> collectionList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">insertBulk</span><span class="token punctuation">(</span>documentList<span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">insertBulk</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documentList<span class="token punctuation">,</span> <span class="token class-name">String</span> collectionName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    writer<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mongoTemplate<span class="token punctuation">.</span><span class="token function">bulkOps</span><span class="token punctuation">(</span><span class="token class-name">BulkOperations<span class="token punctuation">.</span>BulkMode</span><span class="token punctuation">.</span><span class="token constant">UNORDERED</span><span class="token punctuation">,</span> <span class="token class-name">FileEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>documentList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;BulkInsert into {}, taking {}ms, size = {}&quot;</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">,</span> end <span class="token operator">-</span> start<span class="token punctuation">,</span> documentList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多线程分片插入" tabindex="-1"><a class="header-anchor" href="#多线程分片插入"><span>多线程分片插入</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadPoolExecutor</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">NamedThreadFactory</span><span class="token punctuation">(</span><span class="token string">&quot;writer pool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shardingInsertTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> collectionList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;swmm_test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;swmm_test4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TSPairObject</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Date</span> time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getExactlyDate</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">300000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        time <span class="token operator">=</span> <span class="token class-name">TimeUtil</span><span class="token punctuation">.</span><span class="token function">getDateHowManyMinutesAgo</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TSPairObject</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documentList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TSPairObject</span> ts <span class="token operator">:</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;feature_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;TT&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getDt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;stepvalue&quot;</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        documentList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> batchSize <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>
    <span class="token keyword">double</span> length <span class="token operator">=</span> documentList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> shardingSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>length <span class="token operator">/</span> batchSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> collectionName <span class="token operator">:</span> collectionList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> shardingSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> sharingList<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> shardingSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> startIndex <span class="token operator">=</span> i <span class="token operator">*</span> batchSize<span class="token punctuation">;</span>
                <span class="token keyword">int</span> endIndex <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> length<span class="token punctuation">;</span>
                sharingList <span class="token operator">=</span> documentList<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> startIndex <span class="token operator">=</span> i <span class="token operator">*</span> batchSize<span class="token punctuation">;</span>
                <span class="token keyword">int</span> endIndex <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> batchSize<span class="token punctuation">;</span>
                sharingList <span class="token operator">=</span> documentList<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">insertBulk</span><span class="token punctuation">(</span>sharingList<span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">200000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">insertBulk</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> documentList<span class="token punctuation">,</span> <span class="token class-name">String</span> collectionName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    writer<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mongoTemplate<span class="token punctuation">.</span><span class="token function">bulkOps</span><span class="token punctuation">(</span><span class="token class-name">BulkOperations<span class="token punctuation">.</span>BulkMode</span><span class="token punctuation">.</span><span class="token constant">UNORDERED</span><span class="token punctuation">,</span> <span class="token class-name">FileEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>documentList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> end <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;BulkInsert into {}, taking {}ms, size = {}&quot;</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">,</span> end <span class="token operator">-</span> start<span class="token punctuation">,</span> documentList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以看到，主线程也在执行插入任务。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">2023</span>-05-16 <span class="token number">14</span>:04:43.517  INFO <span class="token number">7268</span> --- <span class="token punctuation">[</span>  writer pool-3<span class="token punctuation">]</span> com.hj2.forecast.xxljob.MongoInsertTest  <span class="token builtin class-name">:</span> BulkInsert into swmm_test1, taking 608ms, size <span class="token operator">=</span> <span class="token number">10000</span>
<span class="token number">2023</span>-05-16 <span class="token number">14</span>:04:43.619  INFO <span class="token number">7268</span> --- <span class="token punctuation">[</span>  writer pool-4<span class="token punctuation">]</span> com.hj2.forecast.xxljob.MongoInsertTest  <span class="token builtin class-name">:</span> BulkInsert into swmm_test1, taking 461ms, size <span class="token operator">=</span> <span class="token number">10000</span>
<span class="token number">2023</span>-05-16 <span class="token number">14</span>:04:43.635  INFO <span class="token number">7268</span> --- <span class="token punctuation">[</span>  writer pool-2<span class="token punctuation">]</span> com.hj2.forecast.xxljob.MongoInsertTest  <span class="token builtin class-name">:</span> BulkInsert into swmm_test1, taking 670ms, size <span class="token operator">=</span> <span class="token number">10000</span>
<span class="token number">2023</span>-05-16 <span class="token number">14</span>:04:43.689  INFO <span class="token number">7268</span> --- <span class="token punctuation">[</span>    writer pool<span class="token punctuation">]</span> com.hj2.forecast.xxljob.MongoInsertTest  <span class="token builtin class-name">:</span> BulkInsert into swmm_test1, taking 532ms, size <span class="token operator">=</span> <span class="token number">10000</span>
<span class="token number">2023</span>-05-16 <span class="token number">14</span>:04:43.729  INFO <span class="token number">7268</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> com.hj2.forecast.xxljob.MongoInsertTest  <span class="token builtin class-name">:</span> BulkInsert into swmm_test1, taking 701ms, size <span class="token operator">=</span> <span class="token number">10000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function g(v,b){const s=e("ExternalLinkIcon");return c(),l("div",null,[i,n("ol",null,[n("li",null,[n("a",k,[a("线程池的阻塞队列的选择"),t(s)])]),n("li",null,[n("a",r,[a("https://zhuanlan.zhihu.com/p/116426107"),t(s)])]),n("li",null,[n("a",d,[a("Spring MongoTemplate 批量操作源码跟踪与最佳实践"),t(s)])])]),m])}const y=o(u,[["render",g],["__file","mongodbMultiInsert.html.vue"]]),f=JSON.parse('{"path":"/posts/database/mongodbMultiInsert.html","title":"MongoDB优化大量插入","lang":"zh-CN","frontmatter":{"title":"MongoDB优化大量插入","order":1,"author":"Roy","date":"2024-03-01T00:00:00.000Z","category":["数据库"],"tag":["数据库","MongoDB"],"sticky":false,"star":true,"copyright":"Copyright © 2024 Roy","description":"MongoDB优化大量插入 MongoDB 的插入操作有哪些？ 在预测预警模块中的滚动计算中，每次计算需要插入约 33w 行数据到 MongoDB 的 6 张表中，而我们使用的正是 MongoTemplate 提供的接口。但问题是 MongoTemplate 提供了 2 个接口进行大量写入，用哪个性能更好呢？ mongoTemplate.insert(...","head":[["meta",{"property":"og:url","content":"https://YUEQIN18.github.io/posts/database/mongodbMultiInsert.html"}],["meta",{"property":"og:site_name","content":"Roy的博客"}],["meta",{"property":"og:title","content":"MongoDB优化大量插入"}],["meta",{"property":"og:description","content":"MongoDB优化大量插入 MongoDB 的插入操作有哪些？ 在预测预警模块中的滚动计算中，每次计算需要插入约 33w 行数据到 MongoDB 的 6 张表中，而我们使用的正是 MongoTemplate 提供的接口。但问题是 MongoTemplate 提供了 2 个接口进行大量写入，用哪个性能更好呢？ mongoTemplate.insert(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T10:27:11.000Z"}],["meta",{"property":"article:author","content":"Roy"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:published_time","content":"2024-03-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T10:27:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MongoDB优化大量插入\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-31T10:27:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Roy\\"}]}"]]},"headers":[{"level":2,"title":"MongoDB 的插入操作有哪些？","slug":"mongodb-的插入操作有哪些","link":"#mongodb-的插入操作有哪些","children":[{"level":3,"title":"mongoTemplate.insert()","slug":"mongotemplate-insert","link":"#mongotemplate-insert","children":[]},{"level":3,"title":"mongoTemplate.bulkOps()","slug":"mongotemplate-bulkops","link":"#mongotemplate-bulkops","children":[]}]},{"level":2,"title":"MongoDB 的插入性能测试","slug":"mongodb-的插入性能测试","link":"#mongodb-的插入性能测试","children":[{"level":3,"title":"单线程 mongoTemplate.insert()","slug":"单线程-mongotemplate-insert","link":"#单线程-mongotemplate-insert","children":[]},{"level":3,"title":"单线程 mongoTemplate.bulkOps()","slug":"单线程-mongotemplate-bulkops","link":"#单线程-mongotemplate-bulkops","children":[]},{"level":3,"title":"单线程总结","slug":"单线程总结","link":"#单线程总结","children":[]},{"level":3,"title":"线程池参数的设置","slug":"线程池参数的设置","link":"#线程池参数的设置","children":[]},{"level":3,"title":"2 线程分表插入","slug":"_2-线程分表插入","link":"#_2-线程分表插入","children":[]},{"level":3,"title":"4 线程分表插入","slug":"_4-线程分表插入","link":"#_4-线程分表插入","children":[]},{"level":3,"title":"4 线程分片插入","slug":"_4-线程分片插入","link":"#_4-线程分片插入","children":[]},{"level":3,"title":"8 线程分片插入","slug":"_8-线程分片插入","link":"#_8-线程分片插入","children":[]},{"level":3,"title":"16 线程分片插入","slug":"_16-线程分片插入","link":"#_16-线程分片插入","children":[]},{"level":3,"title":"32 线程分片插入","slug":"_32-线程分片插入","link":"#_32-线程分片插入","children":[]},{"level":3,"title":"64 线程分片插入","slug":"_64-线程分片插入","link":"#_64-线程分片插入","children":[]},{"level":3,"title":"为什么没有 128 线程插入测试？","slug":"为什么没有-128-线程插入测试","link":"#为什么没有-128-线程插入测试","children":[]},{"level":3,"title":"多线程总结","slug":"多线程总结","link":"#多线程总结","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"测试代码","slug":"测试代码","link":"#测试代码","children":[{"level":3,"title":"单线程 mongoTemplate.insert()","slug":"单线程-mongotemplate-insert-1","link":"#单线程-mongotemplate-insert-1","children":[]},{"level":3,"title":"单线程 mongoTemplate.bulkOps()","slug":"单线程-mongotemplate-bulkops-1","link":"#单线程-mongotemplate-bulkops-1","children":[]},{"level":3,"title":"多线程分表插入","slug":"多线程分表插入","link":"#多线程分表插入","children":[]},{"level":3,"title":"多线程分片插入","slug":"多线程分片插入","link":"#多线程分片插入","children":[]}]}],"git":{"createdTime":1717151231000,"updatedTime":1717151231000,"contributors":[{"name":"YUEQIN18","email":"qinyue12345@gmail.com","commits":1}]},"readingTime":{"minutes":11.11,"words":3332},"filePathRelative":"posts/database/mongodbMultiInsert.md","localizedDate":"2024年3月1日","excerpt":"\\n<h2>MongoDB 的插入操作有哪些？</h2>\\n<p>在预测预警模块中的滚动计算中，每次计算需要插入约 33w 行数据到 MongoDB 的 6 张表中，而我们使用的正是 MongoTemplate 提供的接口。但问题是 MongoTemplate 提供了 2 个接口进行大量写入，用哪个性能更好呢？</p>\\n<h3>mongoTemplate.insert()</h3>\\n<p>mongoTemplate.insert(Collection &lt;? extends T&gt; batchToSave, String collectionName)</p>\\n<p>一个看上去平平无奇的接口，可以将集合中的元素全部插入，那么它底层是如何实现的呢？</p>","autoDesc":true}');export{y as comp,f as data};
